[DONE] Shots decrease health, and enemies vanish as a result.
[DONE] Shots get zeroed on array after falling out of range, or hitting an enemy.
[DONE] Enemies get zeroed on array after falling out of range, or dying.
[DONE] Explosion animation once hit.
[DONE] Knockback.
[DONE] Reinstate proper hit flashing.
[DONE] Mike doesn't push up his origin against screen bounds.
[DONE] Mike explodes when hit (effectively ending game)
[DONE] Mike to show explode animation when dead.
[DONE] Mike to flash when hit.
[DONE] Should also damage enemies when colliding with them.
[DONE] Player should get knockback when collided, or hit.
[DONE] Don't collide with things when we're dead :p
[DONE] Firing animation.
[DONE] Reinstate leaning.
[DONE] Spinning CD-ROM.
[DONE] Random planets in the background, scrolling by.
[DONE] Animated shots.
[DONE] Variable planet spawn time.
[DONE] Shorthand function for rate limiting.
[DONE] Planet spawn position should propery take into account screen width (like enemies?)
[DONE] Added randomised circuit board platforms.
[DONE] Fixed ambiguity in spawn timing - differentiation between seconds, and fractions of.
[DONE] Remove black borderlines from floppy disks.
[DONE] Add bug enemy
[DONE] Mike shooting while leaning animation needs height adjustment.
[DONE] Thickly-biased circuit board platforms (using small seed)
[DONE] Vertically-biased circuit board platforms.
[DONE] Cache resultant PCB configurations on initialisation, as composited, tiled textures.
[DONE] Add 'edge' structures to base: rounded with padding.
[DONE] Add random 'interest' base tiles with resistors and chips.
[DONE] Organic and plasma shots from enemies onscreen at same time.
[DONE] Special organic shot from viruses.
[DONE] Introduce Raiden/1942-aspect vertical window.
[DONE] Quit on window close.
[DONE] Shadows should not overlap other enemies.
[DONE] Don't put Mike's shadow on top of enemies (single layer frame for all shadows).
[DONE] Player shadows.
[DONE] Cute speech bubbles for characters (Cosmo, Parodius).
[DONE] Moving left and right makes parallax effect with monsters, platforms, and space.
[DONE] Entity shadows to base structures.
[DONE] Space background should flicker two-frame animation like Galaga.
[DONE] Consistent lighting style for bug and virus (goruaud or specular)
[DONE] Hitting enemies should take parallax into account.
[DONE] Enum for parallax layers.
[DONE] Vertical shadow parallax (see Raptor)
[DONE] Shot and explosion shadows.
[DONE] Fix bug with top+left+fire key handling.
[DONE] Animated intro sequence.
[DONE] Sine enemies on rollcall aren't quite in the right vertical position.
[DONE] Ensure consistently high framerate.
[DONE] Looping back to intro in attract mode skips the LM Presents frame.
[DONE] Sometimes you can see 1 frame of uninitialised content (e.g. title screen with floppies)
[DONE] Restore blue 'super' shadow during intro sequence.
[DONE] Some of the 'flecks' are outside the super bound, causing issues with sans background.
[DONE] Omit the starry background on super intro sequence.
[DONE] ~ Move titlescreen and game transition binds
[DONE] ~ Simplify transition binds. 
[DONE] ~ Mike to use left/right swooping frames during intro.
[DONE] ~ Mike should leverage player commands during intro.
[DONE] Sounds(!)
[DONE] Cooler explosion sprite (core with shockwave - simple white and blue).
[DONE] Stop interaction during into and title.

Fade in & out.
Distinguish presses from holds.
~ Fade to operate on Hertz basis, not increment.
~ Notion of 'init' for states vs. scripts seems a bit pants / unclear. Make every state change a simple script?
~ Can we merge 'stateInitialised' with sceneStarted?


~ Convert all magic number array sizes to shared #define's.


RELEASE 0.1 - July 12th 2015
- Title screen [DONE]
- Sounds [DONE]
- Health meter
- Game over screen
- Level end trigger (no more to spawn, X seconds after)
- Score (50 points per enemy, live counter, shows at end of level)
- Configured enemy placements


Differentiate presses from holds, to stop bypassing sequences by holding 'fire'
Fade in and out.

~ Some graphical artifacts on state change - timing issue with inits and rendering?

Enemies in intro should try to shoot / move towards player.
~ Mike should return to exact center on the intro zooming sequence.
Points: Sushi, Pepsi can, Pocky, McDonald's Fries, M&M's.
Ability to do cool stuff on the title screen (shoot enemies etc).
Overcast, raining level on planet (Diablo, SFA3-Bison style)
Dual-layer star scroller.
Flickering super streak.
Joystick support.
Mouse support.
Frame rate display.
Simple bitmap letters and numbers for own font rendering.
Whole-bitmap messages and title text - no fonts or characters needed.
FPS counter (time inside frame).
Mike with shades animation.
Mike twirl animation.
Use shades/twirl animation during intro.


Don't overlap transparent shadows.
Experiment with exponential parallax offset.

Replace 1-pixel PCB gaps with inner corner tiles.
Just load all assets in the folder?

Simple Konami-style screen wipes.
Homing shot.
Health bar with Hyper-style hearts.
Little asteroids floating by (in the background).

Enemies should spawn with normal rate-limiting algorithm, not their own interval.
Specular highlights on PCB boards.
Shadow render mask for planets and space (http://tinyurl.com/o62hu4b)
Cool Akuma-style blue shadow special effect for enemy motion (0,0,128, 164 alpha).
Give shadows a realistic blue hue, once space overlap issue fixed.
Stop spawning enemies so close to the edges of the window.
Inner PCB edges.
PCB scaling factor doesn't work properly with edge tiles.
Explosions on enemies seem to be higher than their origins.
Add animated 'shorting' tiles to base structures.
Fast-paced attract mode - hectic demo and brief, vivid title screen.
Simple integer-based array map for enemy positions.
Enemies spawn powerups that buff weapons.
Red disk that shoots homing shots.
Should spawn a planet on initial view.
Attack pattern: Column[rnd(4)]
Shadows for enemy and player shots.
~ Shadow drawing is very verbose and duplicated - should just be a single flag, or statement.
~ Player knockback should use formal pipeline for momentum and bounds checking.
~ Optimise sprite surfaces for faster drawing - https://forums.libsdl.org/viewtopic.php?t=7638&sid=58da06114f78e9f00a37d2dc8236e16a
~ Reduce colour depth of graphics, and corresponding surface classes to something I actually need.
~ Reduce game power draw by not while'ing and drawing 100%. Consider delay?
~ Fix underlying cause of enemies not spawing far enough on right (parallax?)
~ Game should frameskip on slow rendering, not slow down entirely (reconsider incremental).
~ Update function definitions to read blank(void) rather than blank().
~ Perf savings by using float rather than double?
~ Convert all seconds-based hertz ratings to milliseconds for easy passing to timer().
~ Able to define global scroll speed that background and enemies both are affected by.
~ Better base/parallax metaphor for bounds detection on characters.
~ Simplify platform creation algorithm: double seed map itself.
~ SDL-supported way of modulating to pure white for hit sprites.
~ Centralise enemy/player animation and hitting.
~ Save CPU time by creating platforms upfront on init.
~ Convenience function for tilemap generation, some duplication in background.c.
~ Kinda shitty how we store enemy.frameName just to render shadows.
~ Nicer way of determining whether something has a shadow version in enemy.c.
Directional knockback (e.g. sideways collision)
Lerping knockback.
Enemy infighting?
Try a rotating CD rather than spinning.
Keyboard that shoots keys at you.
All sprites and background tiles to be a consistent 24 pixels square.
Shorthand for making sprites with particular frames.

1. Implement Rachaie sounds, mm!
2. Implement a scoring system, mm!
3. Kill the snots.
4. Have an ending.
5. Have a beginning.
6. Have a pet T-Rex. RRRRAAAAAAA!
